apply plugin: 'com.android.library'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'

android {
    def versions = rootProject.extensions.getByName("ext")

    compileSdkVersion versions["android_—Åompile_sdk_version"]

    defaultConfig {
        minSdkVersion versions["android_min_sdk_version"]
        targetSdkVersion versions["android_target_sdk_version"]
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:${coroutine_version}"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    api "android.arch.persistence.room:runtime:$room_version"
    kapt "android.arch.persistence.room:compiler:$room_version"
    api "com.squareup.okhttp3:okhttp:$ok_http_version"
    api "com.google.code.gson:gson:$gson_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_core_version"
    testImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"

    androidTestImplementation "org.mockito:mockito-android:$mockito_core_version"
    androidTestImplementation "com.nhaarman:mockito-kotlin:$mockito_kotlin_version"
    androidTestImplementation "com.android.support.test:runner:${test_runner_version}"
}

kotlin {
    experimental
            {
                coroutines 'enable'
            }
}
